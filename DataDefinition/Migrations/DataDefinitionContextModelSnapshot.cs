// <auto-generated />
using System;
using DataDefinition;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DataDefinition.Migrations
{
    [DbContext(typeof(DataDefinitionContext))]
    partial class DataDefinitionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DataDefinition.Models.DependentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AnotherCount")
                        .HasColumnType("integer");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("Dependants");
                });

            modelBuilder.Entity("DataDefinition.Models.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("SomeCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("DataDefinition.Models.DependentEntity", b =>
                {
                    b.HasOne("DataDefinition.Models.Entity", "Entity")
                        .WithMany("DependentEntities")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("DataDefinition.Models.Entity", b =>
                {
                    b.Navigation("DependentEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
